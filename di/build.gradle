plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'jacoco'
}

android {
    compileSdkVersion buildConfig.compileSdkVersion
    buildToolsVersion buildConfig.buildToolsVersion

    defaultConfig {
        minSdkVersion buildConfig.minSdkVersion
        targetSdkVersion buildConfig.targetSdkVersion
        versionCode buildConfig.versionCode
        versionName buildConfig.versionName

        testInstrumentationRunner buildConfig.testInstrumentationRunner
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

dependencies {

    implementation project(':domain')
    implementation project(':presentation')
    implementation project(':data')
    implementation project(':remote')

    // Library dependencies
    implementation libraryDependencies.koinCore
    implementation libraryDependencies.koinExt

    // Android dependencies
    implementation androidDependencies.timber
    implementation androidDependencies.koinAndroid
    implementation androidDependencies.koinAndroidViewModel

    // Test
    testImplementation testDependencies.junit

    // Android Test
    androidTestImplementation testDependencies.junit
    androidTestImplementation androidTestDependencies.androidxTestJunit
    androidTestImplementation androidTestDependencies.androidxTestCore
    androidTestImplementation(androidTestDependencies.koinTest) { exclude group: 'org.mockito' }

    // Espresso dependencies
    androidTestImplementation androidTestDependencies.androidxTestEspressoCore
}

jacoco {
    toolVersion = jacocoVersion
}

task testDi(dependsOn: [':di:testDebugUnitTest', ':di:connectedDebugAndroidTest']) {
    group = 'Test'
    description = "Run di tests"
}

task jacocoTestReportDi(type: JacocoReport, dependsOn: [
        'testDi',
        'createDebugCoverageReport'
]) {
    group = 'Test'

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugJava = fileTree(dir: "${buildDir}/intermediates/classes/debugUnitTest", excludes: fileFilter)
    def debugKotlin = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    getSourceDirectories().setFrom(files([mainSrc]))
    getClassDirectories().setFrom(files([debugJava, debugKotlin]))
    getExecutionData().setFrom(
            fileTree(dir: "$buildDir", includes: [
                    "jacoco/testDebugUnitTest.exec",
                    "outputs/code_coverage/debugAndroidTest/connected/*coverage.ec"
            ])
    )
}